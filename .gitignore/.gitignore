import com.sun.deploy.net.HttpRequest;

import java.io.*;
import java.net.URLDecoder;
import java.util.HashMap;
import java.util.Map;
import java.util.zip.ZipEntry;
import java.util.zip.ZipOutputStream;






public class zipDown {


    public static void main(String[] args) {
        try {
            String  fileName="11";
            String[] fName=new String[2];
            String[] fPath=new String[2];
            String path="11";
            createZip(fileName,fName,fPath,path);
        }catch (Exception e){

        }

    }





    public  static String ptDown(String filename,String url) throws Exception {
        System.out.println("***"+url);
        System.out.println("---------文件开始下载------------");
        Map<String, String> fileMap = new HashMap<>();
        //需要下载文件的路径
        // url = "D:\\CPZL\\2018\\7\\02\\201807021122501530501770196.png";
        //下载文件的文件名
      //   filename = "熊猫人打头.png";
        fileMap.put("url", url);
        fileMap.put("filename", filename);
        String path="D:\\CPZL\\2018\\7\\hh\\";
        FileInputStream is = new FileInputStream(new File(fileMap.get("url")));

        File file = new File(path + fileMap.get("filename"));
        FileOutputStream out = new FileOutputStream(file);


        byte[] b = new byte[1024 * 10];
        int i = 0;
        while ((i = is.read(b)) > 0) {
            out.write(b, 0, i);
        }
        out.close();
        System.out.println("---------文件下载结束------------");
        return null;
    }



    /**
     * 思路：通过接口 读取文件 流，然后下载到网站服务器，打包下载，然后删除
     * 网站通过接口到辅助  批量下载文件
     * @param fileName    要生成的zip文件名
     * @param fName       批量下载文件的 文件名 数组
     * @param fPath			批量下载文件的 路径（在辅助上的） 数组
     * @param path				先把 文件放在服务器上的路径

     * @throws Exception
     */


    public static void createZip(String fileName,String[] fName, String [] fPath,
                                 String path) throws Exception{

        fileName="测试压缩文件.zip";
        fName[0]="熊猫人打头.png";
        fName[1]="测试pdf.pdf";

        fPath[0]="D:\\CPZL\\2018\\7\\02\\201807021122501530501770196.png";
        fPath[1]="D:\\CPZL\\2017\\8\\07\\201708071221111502079672049.pdf";

        path="D:\\CPZL\\2018\\7\\hh\\";

        byte[] buffer = new byte[1024];
        File files = new File(fileName);

 /*       if(!files.exists()) {
            try {
                files.createNewFile();
            } catch (IOException e) {
                // TODO Auto-generated catch block
                e.printStackTrace();
            }
        }*/

       // ZipOutputStream out = new ZipOutputStream(new FileOutputStream(fileName));

        try {
            File file = null;
            for(int i=0; i< fName.length; i++) {
               ptDown(fName[i],fPath[i]);

/*
                file = new File(path+fName[i]);//下载到服务上的文件
                if(!file.exists()){

                    file = new File(path+fName[i]);
                }
                FileInputStream fis = new  FileInputStream(file);
                out.putNextEntry(new ZipEntry(fName[i]));
                int len;
                //读入需要下载的文件的内容，打包到zip文件
                while((len = fis.read(buffer))>0) {
                    out.write(buffer,0,len);
                }*/

                //out.setEncoding("GBK");
               // out.closeEntry();
                //fis.close();
            }
        } catch (Exception e) {
            e.printStackTrace();
        } finally{
        /*    if(out != null){
                out.close();   //不可少
            }*/
        }

        scZip(fileName,fName,path);
        System.out.println("生成"+fileName+"成功");

    }


    public static void scZip(String strZipName,
                             String[] fName,String path) throws Exception{

        File file = new File(path+strZipName);

        try {
            // 以流的形式下载文件。

            if(!file.exists()){
                file.createNewFile();
            }
            InputStream fis = new BufferedInputStream(new FileInputStream(file.getPath()));
            byte[] buffer = new byte[fis.available()];
            fis.read(buffer);
            fis.close();
            // 清空response
            //response.reset();
            FileOutputStream toClient=new FileOutputStream( new File(path+strZipName));

         //   OutputStream toClient = new BufferedOutputStream(response.getOutputStream());
            //response.setContentType("application/octet-stream");

            //如果输出的是中文名的文件，在此处就要用URLEncoder.encode方法进行处理		new String(file.getName().getBytes("GBK"),"ISO8859-1")
            //URLEncoder.encode(file.getName(), "UTF-8")
           // response.setHeader("Content-Disposition", "attachment;filename=" + new String(file.getName().getBytes("GBK"),"ISO8859-1"));
            toClient.write(buffer);
            toClient.flush();
            toClient.close();
        } catch (IOException ex) {
            ex.printStackTrace();
        }finally{
            try {
                //File f = new File(file.getPath());
               // f.delete();
                for(int i=0;i<fName.length;i++){

                    File file2=new File(path+fName[i]);
                    System.out.println(file2.getPath());

                    boolean a=file2.delete();
                    System.out.println(a);
                }
            } catch (Exception e) {
                e.printStackTrace();
            }
        }
    }











    /**
     * 下面是在wb上以req 跟resp 为基础的下载模板
     */


  /*  public static  void  wbDown1() throws Exception{

        System.out.println("-------文件开始下载----------");
        BufferedInputStream fin = null;
        BufferedOutputStream outs = null;
        // 开始读取写入客户端
        try {
            byte[] b = WsPost.getInstance().getFileStreamToRequest(filePath + "");

            response.reset();
            response.setHeader("Content-Length", b.length + "");
            response.setHeader("Pragma", "no-cache");
            response.setHeader("Expires", "0");
            // 文件名
            String filename = java.net.URLEncoder.encode(fileName
                    + "", "UTF-8");
            response.setHeader("Content-Disposition", "attachment; filename=\""
                    + filename + "\"");
            response.setContentType("text/plain;charset=UTF-8");//jsp\ww_bgglr\jsp/nssbb\

            FileOutputStream outputStream=new FileOutputStream( new File(path+fileName)); //在服务器项目的某个位置下载
           //  FileOutputStream outputStream=response.getOutputStream();                                //使用浏览器下载
            outs = new BufferedOutputStream(outputStream);
            outs.write(b);
            outs.flush();
            outs.close();
            System.out.println("-------文件下载成功----------");
        } catch (Exception e) {
            e.printStackTrace();
        } finally {
            if (fin != null)
                fin.close();
            if (outs != null)
                outs.close();

        }
    }*/


/*

    public static  void  downJK(
            HttpServletResponse response, String fileName,String filePath,String path) throws ServletException,
            IOException {

        System.out.println("-------文件开始下载----------");
        BufferedInputStream fin = null;
        BufferedOutputStream outs = null;
        // 开始读取写入客户端
        try {
            byte[] b = WsPost.getInstance().getFileStreamToRequest(filePath + "");

            response.reset();
            response.setHeader("Content-Length", b.length + "");
            response.setHeader("Pragma", "no-cache");
            response.setHeader("Expires", "0");
            // 文件名
            String filename = java.net.URLEncoder.encode(fileName
                    + "", "UTF-8");
            response.setHeader("Content-Disposition", "attachment; filename=\""
                    + filename + "\"");
            response.setContentType("text/plain;charset=UTF-8");//jsp\ww_bgglr\jsp/nssbb\
            FileOutputStream outputStream=new FileOutputStream( new File(path+fileName));
            outs = new BufferedOutputStream(outputStream);
            outs.write(b);
            outs.flush();
            outs.close();
            System.out.println("-------文件下载成功----------");
        } catch (Exception e) {
            e.printStackTrace();
        } finally {
            if (fin != null)
                fin.close();
            if (outs != null)
                outs.close();

        }
    }



    */
/**
     * 思路：通过接口 读取文件 流，然后下载到网站服务器，打包下载，然后删除
     * 网站通过接口到辅助  批量下载文件
     * @param fileName    要生成的zip文件名
     * @param fName       批量下载文件的 文件名 数组
     * @param fPath			批量下载文件的 路径（在辅助上的） 数组
     * @param path				先把 文件放在服务器上的路径
     * @param response
     * @throws Exception
     *//*



    public static void createZip(String fileName,String[] fName, String [] fPath,
                                 String path, HttpServletResponse response) throws Exception{

        byte[] buffer = new byte[1024];
        File files = new File(fileName);

        if(!files.exists()) {
            try {
                files.createNewFile();
            } catch (IOException e) {
                // TODO Auto-generated catch block
                e.printStackTrace();
            }
        }

        ZipOutputStream out = new ZipOutputStream(new FileOutputStream(fileName));
        try {
            File file = null;
            for(int i=0; i< fName.length; i++) {
                downJK(response, fName[i], fPath[i], path);
                file = new File(path+fName[i]);
                if(!file.exists()){
                    System.out.println(file);
                    file = new File(path+fName[i]);
                }
                FileInputStream fis = new  FileInputStream(file);
                out.putNextEntry(new ZipEntry(fName[i]));
                int len;
                //读入需要下载的文件的内容，打包到zip文件
                while((len = fis.read(buffer))>0) {
                    out.write(buffer,0,len);
                }
                out.setEncoding("GBK");
                out.closeEntry();
                fis.close();
            }
        } catch (Exception e) {
            e.printStackTrace();
        } finally{
            if(out != null){
                out.close();   //不可少
            }
        }

        scZip(fileName, response,fName,path);
        System.out.println("生成"+fileName+"成功");

    }

    */
/**
     * 生成可在页面下载的Zip文件
     * @param strZipName
     * @param response
     * @throws Exception
     *//*

    public static void scZip(String strZipName,
                             HttpServletResponse response,String[] fName,String path) throws Exception{

        File file = new File(strZipName);

        try {
            // 以流的形式下载文件。
            InputStream fis = new BufferedInputStream(new FileInputStream(file.getPath()));
            byte[] buffer = new byte[fis.available()];
            fis.read(buffer);
            fis.close();
            // 清空response
            response.reset();

            OutputStream toClient = new BufferedOutputStream(response.getOutputStream());
            response.setContentType("application/octet-stream");

            //如果输出的是中文名的文件，在此处就要用URLEncoder.encode方法进行处理		new String(file.getName().getBytes("GBK"),"ISO8859-1")
            //URLEncoder.encode(file.getName(), "UTF-8")
            response.setHeader("Content-Disposition", "attachment;filename=" + new String(file.getName().getBytes("GBK"),"ISO8859-1"));
            toClient.write(buffer);
            toClient.flush();
            toClient.close();
        } catch (IOException ex) {
            ex.printStackTrace();
        }finally{
            try {
                File f = new File(file.getPath());
                f.delete();
                for(int i=0;i<fName.length;i++){
                    System.out.println("文件删除");
                    File file2=new File(path+fName[i]);
                    file2.delete();
                }
            } catch (Exception e) {
                e.printStackTrace();
            }
        }
    }
*/










}
